[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llmshell"
version = "0.1.0"
description = "A privacy-respecting Linux shell that translates natural language to bash commands using local LLMs"
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
authors = [
    {name = "Jakob Rohde"}
]
keywords = ["shell", "llm", "ai", "bash", "linux", "ollama", "natural-language"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Shells",
    "Topic :: System :: System Shells",
    "Topic :: Utilities",
]

dependencies = [
    # CLI framework
    "click>=8.0.0",
    # HTTP client for Ollama API
    "httpx>=0.24.0",
    # Rich for beautiful terminal output
    "rich>=13.0.0",
    # Configuration management
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    # YAML support for config files
    "pyyaml>=6.0.0",
    # JSON schema validation
    "jsonschema>=4.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    # Code quality
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    # Development tools
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
]
build = [
    # Build tools
    "build>=0.10.0",
    "twine>=4.0.0",
    "pyinstaller>=5.0.0",
    "safety>=2.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "httpx",
]

[project.urls]
Homepage = "https://github.com/jakobr-dev/llmshell"
Repository = "https://github.com/jakobr-dev/llmshell"
Issues = "https://github.com/jakobr-dev/llmshell/issues"

[project.scripts]
llmshell = "llmshell.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["llmshell"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["llmshell"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["llmshell"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
